
.TITLE 'ARRAY 6T 32nm: TESTE DE ROBUSTEZ'

.options post = 2

.include 32nm_HP.pm

.include Escrita.txt
.include Leitura.txt
.include PreCarga.txt

* PARAMETROS

* TAMANHO DO ARRAY
.param num_cel = 128

* NODO
.param length = 32n

* TENSAO DO CIRCUITO
.param supply = 0.9

* DIMENSOES DA CELULA
.param width = '2*length'

* CIRCUITOS AUXILIARES
.param width_aux = 210n

* TEMPOS
.param clock = 1g
.param slope = '0.01*period'
.param period = '1/clock'
.param step = 'period/7'

.global supply gnd

* SUPPLY DO CIRCUITO
Vvdd vdd gnd DC supply

* ========= SIMULACAO
Vwl0    wl0     gnd     PWL(0ns 0)
Vwl1    wl1     gnd     PWL(0ns 0)

* ==== HOLD:
*Vbit    bit     gnd     PWL(0ns 0)
*Vwe     we      gnd     PWL(0ns 0)
*Vwl     wl      gnd     PWL(0ns 0)
*Vpre    pre     gnd     PWL(0ns 0)
*Vsae    sae     gnd     PWL(0ns 0)

* ==== WRITE: ESCREVER O VALOR OPOSTO -> ESCREVER O VALOR ALVO E INSERIR A FALHA NO TEMPO
* VALOR INICIAL = 0V
*Vbit bit gnd PWL(0ns supply 'period' supply 'period + slope' 0)
* VALOR INICIAL = Supply
*Vbit bit gnd PWL(0ns 0 'period' 0 'period + slope' supply)

*Vwl wl gnd PWL(0ns 0 '3*step' 0 '3*step + slope' supply '4*step' supply '4*step + slope' 0
*+ 'period + 3*step' 0 'period + 3*step + slope' supply 'period + 4*step' supply 'period + 4*step + slope' 0)

*Vwe we gnd PWL(0ns supply '2*period' supply '2*period + slope' 0)

*Vpre pre gnd PWL(0ns 0 'step' 0 'step + slope' supply '6*step' supply '6*step + slope' 0
*+ 'period + step' 0 'period + step + slope' supply 'period + 6*step' supply 'period + 6*step + slope' 0)

*Vsae sae gnd PWL(0ns 0)

* === READ: ESCREVER O VALOR E LER EM 1.44ns
* VALOR INICIAL DO Q = SUPPLY
*Vbit bit gnd PWL(0ns 0)
Vbit bit gnd PWL(0ns supply)

Vwl wl gnd PWL(0ns 0 '3*step' 0 '3*step + slope' supply '4*step' supply '4*step + slope' 0
+ 'period + 3*step' 0 'period + 3*step + slope' supply 'period + 4*step' supply 'period + 4*step + slope' 0)

Vwe we gnd PWL(0ns supply 'period' supply 'period + slope' 0)

Vpre pre gnd PWL(0ns 0 'step' 0 'step + slope' supply '6*step' supply '6*step + slope' 0
+ 'period + step' 0 'period + step + slope' supply 'period + 6*step' supply 'period + 6*step + slope' 0)

Vsae sae gnd PWL(0ns 0 'period + 3*step' 0 'period + 3*step + slope' supply 'period + 4*step' supply 'period + 4*step + slope' 0)

* ========= DECLARACAO DO CIRCUITO

* CIRCUITOS AUXILIARES

* PRE-CARGA
Xprecarga pre bl blb vdd gnd pre_carga width=width_aux length=length

* LEITURA
Xleitura sae bl blb out outb vdd gnd leitura width=width_aux length=length

* ESCRITA
Xescrita  bit we bl blb vdd gnd escrita width=width_aux length=length

* CELULA DE TESTE COM VALOR 1

* PRIMEIRO INVERSOR
MP0 vdd qb q vdd PMOS w = width l = length
MN0 q qb gnd gnd NMOS w = width l = length

* SEGUNDO INVERSOR
MP1 vdd q qb vdd PMOS w = width l = length
MN1 qb q gnd gnd NMOS w = width l = length

* TRANSISTORES DE PASSAGEM
MN2 bl wl q gnd NMOS w = width l = length
MN3 blb wl qb gnd NMOS w = width l = length

* 63 CELULAS COM VALOR 1

* PRIMEIRO INVERSOR
MP4 vdd q0b q0 vdd PMOS w = 'width*((num_cel/2)-1)' l = length
MN4 q0 q0b gnd gnd NMOS w = 'width*((num_cel/2)-1)' l = length

* SEGUNDO INVERSOR
MP5 vdd q0 q0b vdd PMOS w = 'width*((num_cel/2)-1)' l = length
MN5 q0b q0 gnd gnd NMOS w = 'width*((num_cel/2)-1)' l = length

* TRANSISTORES DE PASSAGEM
MN6 bl wl0 q0 gnd NMOS w = 'width*((num_cel/2)-1)' l = length
MN7 blb wl0 q0b gnd NMOS w = 'width*((num_cel/2)-1)' l = length

* 64 CELULAS COM VALOR 0

* PRIMEIRO INVERSOR
MP8 vdd q1b q1 vdd PMOS w = 'width*(num_cel/2)' l = length
MN8 q1 q1b gnd gnd NMOS w = 'width*(num_cel/2)' l = length

* SEGUNDO INVERSOR
MP9 vdd q1 q1b vdd PMOS w = 'width*(num_cel/2)' l = length
MN9 q1b q1 gnd gnd NMOS w = 'width*(num_cel/2)' l = length

* TRANSISTORES DE PASSAGEM
MN10 bl wl1 q1 gnd NMOS w = 'width*(num_cel/2)' l = length
MN11 blb wl1 q1b gnd NMOS w = 'width*(num_cel/2)' l = length

* ========= INICIALIZACOES
.ic v(q) = 0

.ic v(q0) = supply

.ic v(q1) = 0

* ========= RESULTADOS
* TESTE DE ROBUSTEZ
* 010 : gnd nodo
* 101 : nodo gnd
Iexp q gnd exp(0 16u 1.44n 10p 1.44001n 320p)

.tran 0.01ns '4*period'

.end
